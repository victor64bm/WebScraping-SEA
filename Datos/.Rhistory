#Desde la columna descripción podemo utilizar el id de cada proyecto.
coords_id <- as.data.frame(coords$description)
View(coords_id)
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description)
View(Localizacion)
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,"descripcion")
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = "descripcion")
View(Localizacion)
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = "descripcion")
View(Localizacion)
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = c("descripcion"))
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = c("descripcion"))
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = c("descripcion") %>% rename(coords$description = description)
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = c("descripcion") %>% rename("coords$description" = "description")
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = "descripcion") %>% rename("coords$description" = "description")
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = "description") %>% rename("coords$description" = "description")
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = "description") %>% rename("description" = "coords$description")
View(Localizacion)
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = "description") %>% rename("description" = "coords$description")
Localizacion$proyecto <- Localizacion$description %>% sub(pattern = "</b>.*",replacement = "") %>% sub(pattern = ".*<b>",replacement = "")
Localizacion$url_mapa <- Localizacion$description %>% sub(pattern = '"><.*',replacement = "") %>% sub(pattern = '.*src="',replacement = "")
Localizacion$id <- Localizacion$url_mapa %>% sub(pattern = "&name=0",replacement = "")  %>% gsub(pattern = "\\D",replacement = "")
Localizacion <- Localizacion %>% select(-c(description,proyecto))
View(Localizacion)
#Unir datos de localizacion a información general
Tabla_general <- merge(Tabla,Localizacion,by = "id",all = TRUE)
View(Tabla_general)
#Unir datos de localizacion a información general
Tabla_general <- Tabla %>% left_join(Localizacion,by = "id")
View(Tabla_general)
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = "description") %>% rename("description" = "coords$description")
Localizacion$proyecto <- Localizacion$description %>% sub(pattern = "</b>.*",replacement = "") %>% sub(pattern = ".*<b>",replacement = "")
Localizacion$url_mapa <- Localizacion$description %>% sub(pattern = '"><.*',replacement = "") %>% sub(pattern = '.*src="',replacement = "")
View(Localizacion)
Localizacion$id <- Localizacion$url_mapa %>% sub(pattern = "&name=0",replacement = "")  %>% gsub(pattern = "\\D",replacement = "")
Localizacion <- Localizacion %>% select(-c(description,proyecto))
#Agregamos las coordendas
cordenadas <- coords$geometry
View(cordenadas)
#Agregamos las coordendas
cordenadas <- as.data.frame(coords$geometry)
View(cordenadas)
View(cordenadas)
#Agregamos las coordendas
cordenadas <- data.frame(coords$geometry)
View(Localizacion)
View(cordenadas)
#Agregamos las coordendas
cordenadas <- as.data.frame(coords$geometry)
View(cordenadas)
coords$geometry
#Agregamos las coordendas
cordenadas <- as.data.frame(st_coordinates(coords))
View(cordenadas)
#Agregamos las coordendas
Cordenadas <- as.data.frame(st_coordinates(coords))
View(Cordenadas)
st_coordinates(coords)[1]
st_coordinates(coords)[,1]
Localizacion$Latitud <- st_coordinates(coords)[,2]
#Unir datos de localizacion a información general
Tabla_general <- Tabla %>% left_join(Localizacion,by = "id")
View(Tabla_general)
#Agregamos las coordendas
Localizacion$Longitud <- st_coordinates(coords)[,1]
Localizacion$Latitud <- st_coordinates(coords)[,2]
#Unir datos de localizacion a información general
Tabla_general <- Tabla %>% left_join(Localizacion,by = "id")
#La URL del mapa nos deriva a una pagina que tiene un parametro de interes mas
#que no está en los datos extraidos anteriormente, que corresponde a la fecha de cuando fue
#calificado cada proyecto. Para esto se tiene que hacer una consulta pagina a pagina.
for (k in 1:nrow(Tabla_general)) {
Tabla_general$Calificado[k] <- read_html(Tabla_general$`URL Mapa`[k]) %>% html_node(xpath = "/html/body/table") %>% html_table() %>% filter(X1 == "Calificado:") %>%  select(c(X2)) %>% as.character()
print(paste0("Calificado",k))
}
#Carga de librerias
library(rvest) # Get data from web
library(httr)  # Also useful to get data on web
library(stringr) # Handle of strings
library(dplyr) # Handle data and use of pipelines
library(xlsx) # Read and write excel files
library(sf) # Read and handle kmz
#Fijar directorio de trabajo
setwd("/home/vcaquilpan/Documentos/R Scripts/SEA/v2/Datos")
#Extraer url principal de la seccion "Busqueda" (Ejemplo: https://seia.sea.gob.cl/busqueda/buscarProyectoAction.php?_paginador_refresh=0&_paginador_fila_actual=1)
url_principal <- "https://seia.sea.gob.cl/busqueda/buscarProyectoAction.php?_paginador_refresh=0&_paginador_fila_actual="
#Extraer numero total de paginas
paginas <-read_html(paste0(url_principal,"1")) %>% html_node(css = "#info_resultado") %>% html_text() %>%
sub(pattern = ".*páginas: ",replacement = "") %>% gsub(pattern = "[[:space:]]",replacement = "") %>%
gsub(pattern = ",",replacement = "") %>% as.integer()
#Extraccion de información general. Se extraen las siguientes variables: N° de proyecto, Nombre de proyecto, Tipo, Región, Tipologia, Titular, inversion,
#Fecha de presentación, Estado y URL.
for (i in 1:paginas) {
lectura <- read_html(paste0(url_principal,i))
#Informacion General
informacion <- lectura  %>% html_node(css = '.tabla_datos') %>% html_table()
informacion <- informacion[-1,]
#Extraccion urls proyectos
urls <- lectura %>% html_node(xpath = "/html/body/div[1]/div[1]/div/div[3]/div[4]/div/table/tbody")
urls <- urls %>% html_children() %>% html_children() %>% html_children() %>% html_attr("href")
urls <- gsub(pattern = ".*&modo=ficha",replacement = NA,urls)
urls <- urls[!(is.na(urls) | urls == "#")]
informacion$url <- urls
#Agrupacion de datos
if (exists("Tabla")) {
Tabla <- rbind(Tabla,informacion)
} else {
Tabla <- informacion
}
print(paste0("informacion general pagina: ",i))
}
#Eliminar variables que ya no se usaran
rm(informacion,lectura)
#Eliminar variables que ya no se usaran
rm(informacion,lectura)
#Eliminar columna Mapa, ya que no entrega información
Tabla$Mapa <- NULL
#Obtener id de cada proyecto
Tabla$id <- Tabla$url %>% gsub(pattern = "\\D",replacement = "")
#2) Lectura de coordenadas. El SEA dispone de un archivo KMZ de coordenadas
#validadas. Vamos a leer dicho archivo.
coords <- read_sf("proyectos.kmz")
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = "description") %>% rename("description" = "coords$description")
Localizacion$proyecto <- Localizacion$description %>% sub(pattern = "</b>.*",replacement = "") %>% sub(pattern = ".*<b>",replacement = "")
Localizacion$url_mapa <- Localizacion$description %>% sub(pattern = '"><.*',replacement = "") %>% sub(pattern = '.*src="',replacement = "")
Localizacion$id <- Localizacion$url_mapa %>% sub(pattern = "&name=0",replacement = "")  %>% gsub(pattern = "\\D",replacement = "")
Localizacion <- Localizacion %>% select(-c(description,proyecto))
#Agregamos las coordendas
Localizacion$Longitud <- st_coordinates(coords)[,1]
Localizacion$Latitud <- st_coordinates(coords)[,2]
#Unir datos de localizacion a información general
Tabla_general <- Tabla %>% left_join(Localizacion,by = "id")
#Eliminar variables que ya no se usaran
rm(informacion,lectura,i,urls)
#Remover objetos sobrantes
rm(coords,Localizacion)
#La URL del mapa nos deriva a una pagina que tiene un parametro de interes mas
#que no está en los datos extraidos anteriormente, que corresponde a la fecha de cuando fue
#calificado cada proyecto. Para esto se tiene que hacer una consulta pagina a pagina.
for (k in 1:nrow(Tabla_general)) {
Tabla_general$Calificado[k] <- read_html(Tabla_general$`URL Mapa`[k]) %>% html_node(xpath = "/html/body/table") %>% html_table() %>% filter(X1 == "Calificado:") %>%  select(c(X2)) %>% as.character()
print(paste0("Calificado",k))
}
View(Tabla_general)
#La URL del mapa nos deriva a una pagina que tiene un parametro de interes mas
#que no está en los datos extraidos anteriormente, que corresponde a la fecha de cuando fue
#calificado cada proyecto. Para esto se tiene que hacer una consulta pagina a pagina.
for (k in 1:nrow(Tabla_general)) {
Tabla_general$Calificado[k] <- read_html(Tabla_general$url_mapa[k]) %>% html_node(xpath = "/html/body/table") %>% html_table() %>% filter(X1 == "Calificado:") %>%  select(c(X2)) %>% as.character()
print(paste0("Calificado",k))
}
View(Tabla_general)
Tabla_general$url_mapa[k]
nrow(Tabla_general)
Tabla_general$url_mapa[100]
read_html(Tabla_general$url_mapa[100]) %>% html_node(xpath = "/html/body/table") %>% html_table()
read_html(Tabla_general$url_mapa[100]) %>% html_node(xpath = "/html/body/table") %>% html_table() %>% filter(X1 == "Estado:") %>%  select(c(X2)) %>% as.character()
#La URL del mapa nos deriva a una pagina que tiene un parametro de interes mas
#que no está en los datos extraidos anteriormente, que corresponde a la fecha de cuando fue
#calificado cada proyecto. Para esto se tiene que hacer una consulta pagina a pagina.
for (k in 1:nrow(Tabla_general)) {
Tabla_general$Calificado[k] <- read_html(Tabla_general$url_mapa[k]) %>% html_node(xpath = "/html/body/table") %>% html_table() %>% filter(X1 == "Estado:") %>%  select(c(X2)) %>% as.character()
print(paste0("Calificado",k))
}
#La URL del mapa nos deriva a una pagina que tiene un parametro de interes mas
#que no está en los datos extraidos anteriormente, que corresponde a la fecha de cuando fue
#calificado cada proyecto. Para esto se tiene que hacer una consulta pagina a pagina.
for (k in 1:nrow(Tabla_general)) {
Tabla_general$Calificado[k] <- read_html(paste0("ttps://seia.sea.gob.cl/mapa/info.php?id=",Tabla_general$id,"&name=0")) %>% html_node(xpath = "/html/body/table") %>% html_table() %>% filter(X1 == "Estado:") %>%  select(c(X2)) %>% as.character()
print(paste0("Calificado",k))
}
#La URL del mapa nos deriva a una pagina que tiene un parametro de interes mas
#que no está en los datos extraidos anteriormente, que corresponde a la fecha de cuando fue
#calificado cada proyecto. Para esto se tiene que hacer una consulta pagina a pagina.
for (k in 1:nrow(Tabla_general)) {
Tabla_general$Calificado[k] <- read_html(paste0("ttps://seia.sea.gob.cl/mapa/info.php?id=",Tabla_general$id[k],"&name=0")) %>% html_node(xpath = "/html/body/table") %>% html_table() %>% filter(X1 == "Estado:") %>%  select(c(X2)) %>% as.character()
print(paste0("Calificado",k))
}
#La URL del mapa nos deriva a una pagina que tiene un parametro de interes mas
#que no está en los datos extraidos anteriormente, que corresponde a la fecha de cuando fue
#calificado cada proyecto. Para esto se tiene que hacer una consulta pagina a pagina.
for (k in 1:nrow(Tabla_general)) {
Tabla_general$Calificado[k] <- read_html(paste0("https://seia.sea.gob.cl/mapa/info.php?id=",Tabla_general$id[k],"&name=0")) %>% html_node(xpath = "/html/body/table") %>% html_table() %>% filter(X1 == "Estado:") %>%  select(c(X2)) %>% as.character()
print(paste0("Calificado",k))
}
View(Tabla_general)
#Se identifica que no todos los proyectos tienen fecha de "Calificado", los cuales corresponden principalmente a los proyectos desistidos o abandonados, por lo que
#en los casos en donde no haya existido ese campo se reemplaza el resultado por defecto de "character(0)" por "".
Tabla_general$Calificado[Tabla_general$Calificado == "character(0)"] <- ""
for (p in 1:nrow(Tabla_general)) {
lectura_docs <- read_html(paste0("https://seia.sea.gob.cl/seia-web/fichaProceso.php?id_expediente=",Tabla_general$id[p]))
Tabla_general$n_documentos[p] <- lectura_docs  %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>% nrow()
Tabla_general$n_adendas[p] <- lectura_docs %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>%  filter(Documento == "Adenda" | Documento == "Adenda complementaria") %>% .$Documento %>% length()
print(paste0("adendas",p))
}
View(Tabla_general)
# 4) Se concluye además que es posible obtener la cantidad de actividades realizadas descritas en la seccion "participacion ciudadana".
# El siguiente link da cuenta de las actividades de participación ciudadana y se analiza proyecto a           proyecto.
# Existe un expediente (6357086) que presenta problemas, ya que es el unico que presenta dos tablas, por lo tanto se genera una excepcion para dicho
# expediente
url_p <- "https://seia.sea.gob.cl/expediente/xhr_pac.php?id_expediente="
url_p <- "https://seia.sea.gob.cl/expediente/xhr_pac.php?id_expediente="
#Se realiza la extraccion
for (m in 1:nrow(Tabla_general)) {
if (Tabla_general$id[m] != "6357086") {
Tabla_general$n_participacion[m] <- read_html(paste0(url_p,Tabla_general$id[m])) %>% html_nodes(css = ".tabla_datos_linea") %>% html_table(fill = TRUE) %>% as.data.frame() %>% nrow()
if (Tabla_general$n_participacion[m] > 0) {Tabla_general$n_participacion[m] <- Tabla_general$n_participacion[m] - 1}
} else {
Tabla_general$n_participacion[m] <-  read_html(paste0(url_p,Tabla_general$id[m])) %>% html_nodes(css = "tabl          e.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% as.data.frame() %>% nrow()
}
print(paste0("participacion",m))
}
View(Tabla_general)
#Se detecta problema en el proyecto id "10061" y "100816" y en varios otros proyectos, por lo que se realiza un TryCatch para que el loop no se detenga,
#y a su vez detecte todos los errores.
Tabla_general$Tipo_proyecto <- ""
Tabla_general$Descripcion <- ""
for (g in 1:nrow(Tabla_general)) {
tryCatch(
expr = {
lectura_ficha <- read_html(paste0(url_ficha,Tabla_general$id[g]))
Tabla_general$Tipo_proyecto[g] <- lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
Tabla_general$Descripcion[g] <- lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Descripción del Proyecto") %>%
select(X2) %>% as.character()
print(paste0("descripcion",g))
},error = function(e){
print(paste0("descrpcionerror",g))
})
}
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto")
url_ficha <- "https://seia.sea.gob.cl/expediente/ficha/fichaPrincipal.php?modo=normal&id_expediente="
#Se detecta problema en el proyecto id "10061" y "100816" y en varios otros proyectos, por lo que se realiza un TryCatch para que el loop no se detenga,
#y a su vez detecte todos los errores.
Tabla_general$Tipo_proyecto <- ""
Tabla_general$Descripcion <- ""
for (g in 1:nrow(Tabla_general)) {
tryCatch(
expr = {
lectura_ficha <- read_html(paste0(url_ficha,Tabla_general$id[g]))
Tabla_general$Tipo_proyecto[g] <- lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
Tabla_general$Descripcion[g] <- lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Descripción del Proyecto") %>%
select(X2) %>% as.character()
print(paste0("Descripcion: ",g))
},error = function(e){
print(paste0("Descrpcionerror: ",g))
})
}
Tabla_general[1]
Tabla_general[1,]
Tabla_general[1,5:10]
Tabla_general[1,10:20]
Tabla_general[2,10:20]
Tabla_general[1,10:20]
Tabla_general[2,10:20]
g = 2
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)")
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto")
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Descripción del Proyecto") %>%
select(X2) %>% as.character()
#Se detecta problema en el proyecto id "10061" y "100816" y en varios otros proyectos, por lo que se realiza un TryCatch para que el loop no se detenga,
#y a su vez detecte todos los errores.
Tabla_general$Tipo_proyecto <- ""
Tabla_general$Descripcion <- ""
for (g in 1:nrow(Tabla_general)) {
tryCatch(
expr = {
lectura_ficha <- read_html(paste0(url_ficha,Tabla_general$id[g]))
Tabla_general$Tipo_proyecto[g] <- lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
Tabla_general$Descripcion[g] <- lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Descripción del Proyecto") %>%
select(X2) %>% as.character()
print(paste0("Descripcion: ",g))
},error = function(e){
print(paste0("Descripcion error: ",g))
})
}
g = 2
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Descripción del Proyecto") %>%
select(X2) %>% as.character()
lectura_ficha <- read_html(paste0(url_ficha,Tabla_general$id[g]))
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Descripción del Proyecto") %>%
select(X2) %>% as.character()
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
lectura_ficha <- read_html(paste0(url_ficha,Tabla_general$id[g]))
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
paste0(url_ficha,Tabla_general$id[g])
lectura_ficha <- read_html(paste0(url_ficha,Tabla_general$id[g]))
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)")
#Se identificaron diferencias en cuanto a las estructuras de páginas, por lo que se prueban dos casos
lectura_ficha_g <- lectura_ficha %>% tml_node(css = "table.tabla_datos_linea:nth-child(5)")
#Se identificaron diferencias en cuanto a las estructuras de páginas, por lo que se prueban dos casos
lectura_ficha_g <- lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)")
#Se identificaron diferencias en cuanto a las estructuras de páginas, por lo que se prueban dos casos
lectura_ficha_g <- lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(4)")
#Se identificaron diferencias en cuanto a las estructuras de páginas, por lo que se prueban dos casos
lectura_ficha_g <- lectura_ficha %>% html_node(css = "table.tabla_datos_linea:nth-child(5)")
#Se identificaron diferencias en cuanto a las estructuras de páginas, por lo que se prueban dos casos
lectura_ficha_g <- lectura_ficha %>% html_node("tabla_datos_linea")
#Se identificaron diferencias en cuanto a las estructuras de páginas, por lo que se prueban dos casos
lectura_ficha_g <- lectura_ficha %>% html_node(".tabla_datos_linea")
lectura_ficha %>% html_node(".tabla_datos_linea")  %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
#Se detecta problema en el proyecto id "10061" y "100816" y en varios otros proyectos, por lo que se realiza un TryCatch para que el loop no se detenga,
#y a su vez detecte todos los errores.
Tabla_general$Tipo_proyecto <- ""
Tabla_general$Descripcion <- ""
for (g in 1:nrow(Tabla_general)) {
tryCatch(
expr = {
lectura_ficha <- read_html(paste0(url_ficha,Tabla_general$id[g]))
Tabla_general$Tipo_proyecto[g] <- lectura_ficha %>% html_node(".tabla_datos_linea") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
Tabla_general$Descripcion[g] <- lectura_ficha %>% html_node(".tabla_datos_linea") %>% html_table(fill = TRUE) %>% filter(X1 == "Descripción del Proyecto") %>%
select(X2) %>% as.character()
print(paste0("Descripcion: ",g))
},error = function(e){
print(paste0("Descripcion error: ",g))
})
}
#Se detectó que en algunos casos, se extrajo el contenido xml que incluye tanto el texto como el contenido base que no nos interesa. Estos casos son identificados
#los cuales empiezan con el simbolo "<". A todos esos casos, se les elimina la parte xml. No obstante, es un poco más complejo extraer la información de valor en estos
#casos.
summary(grepl(pattern = "^<",Tabla_general$Descripcion))
Tabla_general$Descripcion[Tabla_general$No == 70]
Tabla_general$Descripcion[Tabla_general$No == 77]
Tabla_general$Descripcion[Tabla_general$No == 77] %>% gsub(".*-->\rn","")
Tabla_general$Descripcion[Tabla_general$No == 77] %>% gsub(".*-->","")
Tabla_general$Descripcion[Tabla_general$No == 77] %>% gsub(".*-->","")
Tabla_general$Descripcion[Tabla_general$No == 77] %>% gsub(pattern = ".*-->",replacement = "")
#Carga de librerias
library(rvest) # Get data from web
library(httr)  # Also useful to get data on web
library(stringr) # Handle of strings
library(dplyr) # Handle data and use of pipelines
library(xlsx) # Read and write excel files
library(sf) # Read and handle kmz
#Fijar directorio de trabajo
setwd("/home/vcaquilpan/Documentos/R Scripts/SEA/v2/Datos")
#Extraer url principal de la seccion "Busqueda" (Ejemplo: https://seia.sea.gob.cl/busqueda/buscarProyectoAction.php?_paginador_refresh=0&_paginador_fila_actual=1)
url_principal <- "https://seia.sea.gob.cl/busqueda/buscarProyectoAction.php?_paginador_refresh=0&_paginador_fila_actual="
#Extraer numero total de paginas
paginas <-read_html(paste0(url_principal,"1")) %>% html_node(css = "#info_resultado") %>% html_text() %>%
sub(pattern = ".*páginas: ",replacement = "") %>% gsub(pattern = "[[:space:]]",replacement = "") %>%
gsub(pattern = ",",replacement = "") %>% as.integer()
#Extraccion de información general. Se extraen las siguientes variables: N° de proyecto, Nombre de proyecto, Tipo, Región, Tipologia, Titular, inversion,
#Fecha de presentación, Estado y URL.
for (i in 1:paginas) {
lectura <- read_html(paste0(url_principal,i))
#Informacion General
informacion <- lectura  %>% html_node(css = '.tabla_datos') %>% html_table()
informacion <- informacion[-1,]
#Extraccion urls proyectos
urls <- lectura %>% html_node(xpath = "/html/body/div[1]/div[1]/div/div[3]/div[4]/div/table/tbody")
urls <- urls %>% html_children() %>% html_children() %>% html_children() %>% html_attr("href")
urls <- gsub(pattern = ".*&modo=ficha",replacement = NA,urls)
urls <- urls[!(is.na(urls) | urls == "#")]
informacion$url <- urls
#Agrupacion de datos
if (exists("Tabla")) {
Tabla <- rbind(Tabla,informacion)
} else {
Tabla <- informacion
}
print(paste0("informacion general pagina: ",i))
}
#Eliminar variables que ya no se usaran
rm(informacion,lectura,i,urls)
#Eliminar columna Mapa, ya que no entrega información
Tabla$Mapa <- NULL
#Obtener id de cada proyecto
Tabla$id <- Tabla$url %>% gsub(pattern = "\\D",replacement = "")
#2) Lectura de coordenadas. El SEA dispone de un archivo KMZ de coordenadas
#validadas. Vamos a leer dicho archivo.
coords <- read_sf("proyectos.kmz")
#Desde la columna descripción podemo utilizar el id de cada proyecto.
Localizacion <- as.data.frame(coords$description,col.names = "description") %>% rename("description" = "coords$description")
Localizacion$proyecto <- Localizacion$description %>% sub(pattern = "</b>.*",replacement = "") %>% sub(pattern = ".*<b>",replacement = "")
Localizacion$url_mapa <- Localizacion$description %>% sub(pattern = '"><.*',replacement = "") %>% sub(pattern = '.*src="',replacement = "")
Localizacion$id <- Localizacion$url_mapa %>% sub(pattern = "&name=0",replacement = "")  %>% gsub(pattern = "\\D",replacement = "")
Localizacion <- Localizacion %>% select(-c(description,proyecto))
#Agregamos las coordendas
Localizacion$Longitud <- st_coordinates(coords)[,1]
Localizacion$Latitud <- st_coordinates(coords)[,2]
#Unir datos de localizacion a información general
Tabla_general <- Tabla %>% left_join(Localizacion,by = "id")
#Remover objetos sobrantes
rm(coords,Localizacion)
#La URL del mapa nos deriva a una pagina que tiene un parametro de interes mas
#que no está en los datos extraidos anteriormente, que corresponde a la fecha de cuando fue
#calificado cada proyecto. Para esto se tiene que hacer una consulta pagina a pagina.
for (k in 1:nrow(Tabla_general)) {
Tabla_general$Calificado[k] <- read_html(paste0("https://seia.sea.gob.cl/mapa/info.php?id=",Tabla_general$id[k],"&name=0")) %>% html_node(xpath = "/html/body/table") %>% html_table() %>% filter(X1 == "Estado:") %>%  select(c(X2)) %>% as.character()
print(paste0("Estado RCA:",k))
}
#Se identifica que no todos los proyectos tienen fecha de "Calificado", los cuales corresponden principalmente a los proyectos desistidos o abandonados, por lo que
#en los casos en donde no haya existido ese campo se reemplaza el resultado por defecto de "character(0)" por "".
Tabla_general$Calificado[Tabla_general$Calificado == "character(0)"] <- ""
url_evaluacion <- "ttps://seia.sea.gob.cl/seia-web/fichaProceso.php?id_expediente="
#Realizamos la extraccion de informacion
for (p in 1:nrow(Tabla_general)) {
lectura_docs <- read_html(paste0("https://seia.sea.gob.cl/seia-web/fichaProceso.php?id_expediente=",Tabla_general$id[p]))
Tabla_general$n_documentos[p] <- lectura_docs  %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>% nrow()
Tabla_general$n_adendas[p] <- lectura_docs %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>%  filter(Documento == "Adenda" | Documento == "Adenda complementaria") %>% .$Documento %>% length()
print(paste0("Adendas: ",p))
}
url_evaluacion <- "ttps://seia.sea.gob.cl/seia-web/fichaProceso.php?id_expediente="
#Realizamos la extraccion de informacion
for (p in 1:nrow(Tabla_general)) {
lectura_docs <- read_html(paste0("https://seia.sea.gob.cl/seia-web/fichaProceso.php?id_expediente=",Tabla_general$id[p]))
Tabla_general$n_documentos[p] <- lectura_docs  %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>% nrow()
Tabla_general$n_adendas[p] <- lectura_docs %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>%  filter(Documento == "Adenda" | Documento == "Adenda complementaria") %>% .$Documento %>% length()
print(paste0("Adendas: ",p))
}
#Realizamos la extraccion de informacion
for (99 in 1:nrow(Tabla_general)) {
lectura_docs <- read_html(paste0("https://seia.sea.gob.cl/seia-web/fichaProceso.php?id_expediente=",Tabla_general$id[p]))
Tabla_general$n_documentos[p] <- lectura_docs  %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>% nrow()
Tabla_general$n_adendas[p] <- lectura_docs %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>%  filter(Documento == "Adenda" | Documento == "Adenda complementaria") %>% .$Documento %>% length()
print(paste0("Adendas: ",p))
}
#Realizamos la extraccion de informacion
for (p in 99:nrow(Tabla_general)) {
lectura_docs <- read_html(paste0("https://seia.sea.gob.cl/seia-web/fichaProceso.php?id_expediente=",Tabla_general$id[p]))
Tabla_general$n_documentos[p] <- lectura_docs  %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>% nrow()
Tabla_general$n_adendas[p] <- lectura_docs %>% html_nodes(css = ".tabla_datos_linea")%>% html_table() %>%
as.data.frame() %>%  filter(Documento == "Adenda" | Documento == "Adenda complementaria") %>% .$Documento %>% length()
print(paste0("Adendas: ",p))
}
url_p <- "https://seia.sea.gob.cl/expediente/xhr_pac.php?id_expediente="
#Se realiza la extraccion
for (m in 1:nrow(Tabla_general)) {
if (Tabla_general$id[m] != "6357086") {
Tabla_general$n_participacion[m] <- read_html(paste0(url_p,Tabla_general$id[m])) %>% html_nodes(css = ".tabla_datos_linea") %>% html_table(fill = TRUE) %>% as.data.frame() %>% nrow()
if (Tabla_general$n_participacion[m] > 0) {Tabla_general$n_participacion[m] <- Tabla_general$n_participacion[m] - 1}
} else {
Tabla_general$n_participacion[m] <-  read_html(paste0(url_p,Tabla_general$id[m])) %>% html_nodes(css = "tabl          e.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% as.data.frame() %>% nrow()
}
print(paste0("Participacion: ",m))
}
url_p <- "https://seia.sea.gob.cl/expediente/xhr_pac.php?id_expediente="
#Se realiza la extraccion
for (m in 1:nrow(Tabla_general)) {
if (Tabla_general$id[m] != "6357086") {
Tabla_general$n_participacion[m] <- read_html(paste0(url_p,Tabla_general$id[m])) %>% html_nodes(css = ".tabla_datos_linea") %>% html_table(fill = TRUE) %>% as.data.frame() %>% nrow()
if (Tabla_general$n_participacion[m] > 0) {Tabla_general$n_participacion[m] <- Tabla_general$n_participacion[m] - 1}
} else {
Tabla_general$n_participacion[m] <-  read_html(paste0(url_p,Tabla_general$id[m])) %>% html_nodes(css = "tabl          e.tabla_datos_linea:nth-child(5)") %>% html_table(fill = TRUE) %>% as.data.frame() %>% nrow()
}
print(paste0("Participacion: ",m))
}
url_ficha <- "https://seia.sea.gob.cl/expediente/ficha/fichaPrincipal.php?modo=normal&id_expediente="
#Se detecta problema en el proyecto id "10061" y "100816" y en varios otros proyectos, por lo que se realiza un TryCatch para que el loop no se detenga,
#y a su vez detecte todos los errores.
Tabla_general$Tipo_proyecto <- ""
Tabla_general$Descripcion <- ""
for (g in 1:nrow(Tabla_general)) {
tryCatch(
expr = {
lectura_ficha <- read_html(paste0(url_ficha,Tabla_general$id[g]))
Tabla_general$Tipo_proyecto[g] <- lectura_ficha %>% html_node(".tabla_datos_linea") %>% html_table(fill = TRUE) %>% filter(X1 == "Tipo de Proyecto") %>%
select(X2) %>% as.character()
Tabla_general$Descripcion[g] <- lectura_ficha %>% html_node(".tabla_datos_linea") %>% html_table(fill = TRUE) %>% filter(X1 == "Descripción del Proyecto") %>%
select(X2) %>% as.character()
print(paste0("Descripcion: ",g))
},error = function(e){
print(paste0("Descripcion error: ",g))
})
}
#Se detectó que en algunos casos, se extrajo el contenido xml que incluye tanto el texto como el contenido base que no nos interesa. Estos casos son identificados
#los cuales empiezan con el simbolo "<". A todos esos casos, se les elimina la parte xml. No obstante, es un poco más complejo extraer la información de valor en estos
#casos.
summary(grepl(pattern = "^<",Tabla_general$Descripcion))
#Reemplazar dichos casos
Tabla_general$Descripcion <- Tabla_general$Descripcion %>% gsub(pattern = ".*-->",replacement = "")
#Generar columna año
Tabla_general$Ano_Ingreso <- substr(Tabla_general$`FechaPresentaciónFecha deIngreso(*)`,7,10)
View(Tabla_general)
#Remover objetos sin uso
rm(lectura_docs,lectura_ficha,g,k,m,p)
#Imprimir Tabla resultante
write.csv2(Tabla_general,"Tabla General.csv",row.names = FALSE)
