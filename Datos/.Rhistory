remDr$navigate(url)
webElems <- remDr$findElements(using = "tag name","iframe")
sapply(webElems, function(x){x$getElementAttribute("src")})
remDr$switchToFrame(webElems[[2]])
more <- remDr$findElement(using = 'css selector','#advancedButton')
more$clickElement()
url <- 'https://airecqp.mma.gob.cl/so2/'
remDr <- remoteDriver(port = 4445L,browserName = "firefox")
remDr$open(silent = TRUE)
remDr$navigate(url)
webElems <- remDr$findElements(using = "tag name","iframe")
sapply(webElems, function(x){x$getElementAttribute("src")})
remDr$switchToFrame(webElems[[2]])
url <- 'https://airecqp.mma.gob.cl/so2/'
remDr <- remoteDriver(port = 4445L,browserName = "firefox")
remDr$open(silent = TRUE)
remDr$navigate(url)
webElems <- remDr$findElements(using = "tag name","iframe")
sapply(webElems, function(x){x$getElementAttribute("src")})
remDr$switchToFrame(webElems[[2]])
##############################################
url <- 'https://airecqp.mma.gob.cl/so2/'
remDr <- remoteDriver(port = 4445L,browserName = "firefox")
remDr$open(silent = TRUE)
remDr$navigate(url)
webElems <- remDr$findElements(using = "tag name","iframe")
sapply(webElems, function(x){x$getElementAttribute("src")})
remDr$switchToFrame(webElems[[2]])
firefox_profile.me <- makeFirefoxProfile(list(marionette = TRUE,
webdriver_accept_untrusted_certs = TRUE, # for sites which has expired certificates (sometimes required for internal sites)
webdriver_assume_untrusted_issuer = TRUE)) # for the same reason
remDr <- remoteDriver(port = 4445L,browserName = "firefox",extraCapabilities = firefox_profile.me)
remDr$open(silent = TRUE)
remDr$navigate(url)
remDr$close()
#solucion problema ssl
#httr::set_config(config(ssl_verifypeer = FALSE))
#Setear URL
url1 = 'https://macam.mma.gob.cl/red_industrial/region_valparaiso/zona_quintero_ventanas/SO2/mediaSO2simple/GraficoTablaMHugm3.html'
firefox_profile.me <- makeFirefoxProfile(list(marionette = TRUE,
webdriver_accept_untrusted_certs = TRUE, # for sites which has expired certificates (sometimes required for internal sites)
webdriver_assume_untrusted_issuer = TRUE)) # for the same reason
remDr <- remoteDriver(port = 4445L,browserName = "firefox",extraCapabilities = firefox_profile.me)
remDr$open(silent = TRUE)
remDr$navigate(url1)
firefox_profile.me <- makeFirefoxProfile(list(
webdriver_accept_untrusted_certs = TRUE, # for sites which has expired certificates (sometimes required for internal sites)
webdriver_assume_untrusted_issuer = TRUE)) # for the same reason
remDr <- remoteDriver(port = 4445L,browserName = "firefox",extraCapabilities = firefox_profile.me)
remDr$open(silent = TRUE)
remDr$navigate(url1)
avanzado <- remDr$findElement(using = 'css selector','#advancedButton')
avanzado$clickElement()
firefox_profile.me <- makeFirefoxProfile(list(
webdriver_accept_untrusted_certs = TRUE, # for sites which has expired certificates (sometimes required for internal sites)
webdriver_assume_untrusted_issuer = TRUE)) # for the same reason
remDr <- remoteDriver(port = 4445L,browserName = "firefox",extraCapabilities = firefox_profile.me)
remDr$open(silent = TRUE)
remDr$navigate(url1)
avanzado <- remDr$findElement(using = 'css selector','#advancedButton')
avanzado$clickElement()
take <- remDr$findElement(using = 'css selector','#exceptionDialogButton')
take$clickElement()
tabla <- remDr$findElement(using = 'css selector','#dt-table > tbody:nth-child(2)')
tabla <- remDr$findElement(using = 'css selector','#dt-table > tbody:nth-child(2)')
tabla <- remDr$findElement(using = 'css selector','.dataTables_scrollHead')
firefox_profile.me <- makeFirefoxProfile(list(
webdriver_accept_untrusted_certs = TRUE, # for sites which has expired certificates (sometimes required for internal sites)
webdriver_assume_untrusted_issuer = TRUE)) # for the same reason
remDr <- remoteDriver(port = 4445L,browserName = "firefox",extraCapabilities = firefox_profile.me)
remDr$open(silent = TRUE)
remDr$navigate(url1)
library(devtools)
install.packages("remotes")
install.packages("remotes")
library(RSelenium)
library(devtools)
remotes::install_github("hrbrmstr/hrbrmisc")
install.packages("splashr")
install.packages("magick")
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
#Carga de librerias
library(dplyr)
library(rvest)
library(stringr)
library(httr)
library(curl)
url <- "https://aqicn.org/city/temuco/es/"
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
dato <- substr(lectura,1,2)
estado <- sub("Actualizado.*", "", lectura)
estado <- gsub('[[:digit:]]+',"",estado)
fecha <- str_match(lectura,",'(.*?)',")
fecha <- fecha[,2]
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
date <- sub(".*, ","",fecha)
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
date <- sub(".*, ","",fecha)
fecha2 <-gsub('[[:alpha:]]+','',fecha)
as.POSIXct(fecha2,format = ", %d . %Y %H:%M")
mes <- gsub('[[:digit:]]+',"",fecha)
url <- "https://aqicn.org/city/temuco/es/"
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
dato <- substr(lectura,1,2)
estado <- sub("Actualizado.*", "", lectura)
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
dato <- substr(lectura,1,2)
estado <- sub("Actualizado.*", "", lectura)
estado <- gsub('[[:digit:]]+',"",estado)
fecha <- str_match(lectura,",'(.*?)',")
fecha <- fecha[,2]
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
estado <- sub("Actualizado.*", "", lectura)
url <- "https://aqicn.org/city/temuco/es/"
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
estado <- sub("Actualizado.*", "", lectura)
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
estado <- sub("Actualizado.*", "", lectura)
valor <- gsub('[[:alpha:]]+',"",estado)
estado <- gsub('[[:digit:]]+',"",estado)
fecha <- str_match(lectura,",'(.*?)',")
fecha <- str_match(lectura,",'(.*?)',")[,2]
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
mes <- gsub('[[:digit:]]+',"",fecha)
date <- sub(".*, ","",fecha)
fecha2 <-gsub('[[:alpha:]]+','',fecha)
date <- sub(".*, ","",fecha)
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
mes <- sub(".*, ","",fecha)
mes <- gsub('[[:digit:]]+',"",mes)
mes <- gsub('[[:punct:]]+',"",mes)
mes <- gsub(" ","",mes)
meses["Abr"]
mes[mes == "Abr"]
mes[mes == "Abr"]
match(mes,meses)
Hora <-gsub('[[:alpha:]]+','',fecha)
url <- "https://aqicn.org/city/temuco/es/"
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
estado <- sub("Actualizado.*", "", lectura)
valor <- gsub('[[:alpha:]]+',"",estado)
estado <- gsub('[[:digit:]]+',"",estado)
fecha <- str_match(lectura,",'(.*?)',")[,2]
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
mes <- sub(".*, ","",fecha)
mes <- gsub('[[:digit:]]+',"",mes)
mes <- gsub('[[:punct:]]+',"",mes)
mes <- gsub(" ","",mes)
match(mes,meses)
Hora <-gsub('[[:alpha:]]+','',fecha)
as.POSIXct(fecha2,format = ", %d . %Y %H:%M")
Hora <- paste0(as.character(match(mes,meses),Hora))
url <- "https://aqicn.org/city/temuco/es/"
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
estado <- sub("Actualizado.*", "", lectura)
valor <- gsub('[[:alpha:]]+',"",estado)
estado <- gsub('[[:digit:]]+',"",estado)
fecha <- str_match(lectura,",'(.*?)',")[,2]
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
mes <- sub(".*, ","",fecha)
mes <- gsub('[[:digit:]]+',"",mes)
mes <- gsub('[[:punct:]]+',"",mes)
mes <- gsub(" ","",mes)
Hora <-gsub('[[:alpha:]]+','',fecha)
as.character(match(mes,meses)
Hora <- paste0(as.character(match(mes,meses)),Hora)
Hora <- paste0(as.character(match(mes,meses)),Hora)
as.character(match(mes,meses))
Hora
#Carga de librerias
library(dplyr)
library(rvest)
library(stringr)
library(httr)
library(curl)
url <- "https://aqicn.org/city/temuco/es/"
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
estado <- sub("Actualizado.*", "", lectura)
valor <- gsub('[[:alpha:]]+',"",estado)
estado <- gsub('[[:digit:]]+',"",estado)
fecha <- str_match(lectura,",'(.*?)',")[,2]
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
mes <- sub(".*, ","",fecha)
mes <- gsub('[[:digit:]]+',"",mes)
mes <- gsub('[[:punct:]]+',"",mes)
mes <- gsub(" ","",mes)
Hora <-gsub('[[:alpha:]]+','',fecha)
Hora <- paste0(as.character(match(mes,meses)),Hora)
as.POSIXct(fecha2,format = "%b, %d . %Y %H:%M")
as.POSIXct(Hora,format = "%b, %d . %Y %H:%M")
as.POSIXct(Hora,format = "%m, %d . %Y %H:%M")
Hora <- as.POSIXct(Hora,format = "%m, %d . %Y %H:%M")
rm(meses,lectura,url)
rm(meses,lectura,url,mes)
url <- "https://aqicn.org/city/temuco/es/"
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
estado <- sub("Actualizado.*", "", lectura)
valor <- gsub('[[:alpha:]]+',"",estado)
estado <- gsub('[[:digit:]]+',"",estado)
fecha <- str_match(lectura,",'(.*?)',")[,2]
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
mes <- sub(".*, ","",fecha)
mes <- gsub('[[:digit:]]+',"",mes)
mes <- gsub('[[:punct:]]+',"",mes)
mes <- gsub(" ","",mes)
hora <-gsub('[[:alpha:]]+','',fecha)
hora <- paste0(as.character(match(mes,meses)),Hora)
hora <- as.POSIXct(Hora,format = "%m, %d . %Y %H:%M")
rm(meses,lectura,url,mes)
Datos <- as.data.frame(fecha,valor,estado,hora)
#Carga de librerias
library(dplyr)
library(rvest)
library(stringr)
library(httr)
library(curl)
url <- "https://aqicn.org/city/temuco/es/"
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
estado <- sub("Actualizado.*", "", lectura)
valor <- gsub('[[:alpha:]]+',"",estado)
estado <- gsub('[[:digit:]]+',"",estado)
fecha <- str_match(lectura,",'(.*?)',")[,2]
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
mes <- sub(".*, ","",fecha)
mes <- gsub('[[:digit:]]+',"",mes)
mes <- gsub('[[:punct:]]+',"",mes)
mes <- gsub(" ","",mes)
hora <-gsub('[[:alpha:]]+','',fecha)
hora <- paste0(as.character(match(mes,meses)),Hora)
#Carga de librerias
library(dplyr)
library(rvest)
library(stringr)
library(httr)
library(curl)
url <- "https://aqicn.org/city/temuco/es/"
lectura <- read_html(url) %>% html_node(css = '#citydivmain > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > table:nth-child(2)') %>% html_text()
estado <- sub("Actualizado.*", "", lectura)
valor <- gsub('[[:alpha:]]+',"",estado)
estado <- gsub('[[:digit:]]+',"",estado)
fecha <- str_match(lectura,",'(.*?)',")[,2]
meses <- c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic")
mes <- sub(".*, ","",fecha)
mes <- gsub('[[:digit:]]+',"",mes)
mes <- gsub('[[:punct:]]+',"",mes)
mes <- gsub(" ","",mes)
hora <-gsub('[[:alpha:]]+','',fecha)
hora <- paste0(as.character(match(mes,meses)),hora)
hora <- as.POSIXct(hora,format = "%m, %d . %Y %H:%M")
rm(meses,lectura,url,mes)
Datos <- as.data.frame(fecha,valor,estado,hora)
Datos <- as.dataframe(fecha,valor,estado,hora)
Datos <- dataframe(fecha,valor,estado,hora)
Datos <- data.frame(fecha,valor,estado,hora)
View(Datos)
Datos <- data.frame(hora,valor,estado)
View(Datos)
install.packages("gtools")
library(gtools)
library(gtools)
Sys.sleep(10) # Suspend execution of R expressions. The time interval to suspend execution for, in seconds.
install.packages("plotly")
install.packages("leaflet")
library(leaflet)
data(quakes)
# first 20 quakes
df.20 <- quakes[1:20,]
View(df.20)
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag <= 4) {
"green"
} else if(mag <= 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(df.20)
)
leaflet(df.20) %>% addTiles() %>%
addAwesomeMarkers(~long, ~lat, icon=icons, label=~as.character(mag))
quakes$mag <- as.character(quakes$mag)
View(quakes)
data(quakes)
# first 20 quakes
df.20 <- quakes[1:20,]
quakes$mag <- as.character(quakes$mag)
data(quakes)
quakes$mag <- as.character(quakes$mag)
# first 20 quakes
df.20 <- quakes[1:20,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag == 4) {
"green"
} else if(mag == 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(df.20)
)
leaflet(df.20) %>% addTiles() %>%
addAwesomeMarkers(~long, ~lat, icon=icons, label=~as.character(mag))
data(quakes)
quakes$mag <- as.factor(quakes$mag)
# first 20 quakes
df.20 <- quakes[1:20,]
getColor <- function(quakes) {
sapply(quakes$mag, function(mag) {
if(mag == 4) {
"green"
} else if(mag == 5) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(df.20)
)
leaflet(df.20) %>% addTiles() %>%
addAwesomeMarkers(~long, ~lat, icon=icons, label=~as.character(mag))
install.packages("randomForest")
#Carga de librerias
library(randomForest)
require(MASS)
attach(Boston)
set.seed(1)
dim(Boston)
#Separar datos de entrenamiento con datos de test
train = sample(1:nrow(Boston),300)
#Generar modelo
Boston.rf = randomForest(medv ~ .,data = Boston,subset = train)
Boston.rf
#Cargar datos de interes
attach(Boston)
set.seed(1)
dim(Boston)
#Separar datos de entrenamiento con datos de test
train = sample(1:nrow(Boston),300)
#Generar modelo
Boston.rf = randomForest(medv ~ .,data = Boston,subset = train)
Boston.rf
set.seed(1)
dim(Boston)
#Separar datos de entrenamiento con datos de test
train = sample(1:nrow(Boston),300)
#Generar modelo
Boston.rf = randomForest(medv ~ .,data = Boston,subset = train)
Boston.rf
set.seed(101)
dim(Boston)
#Separar datos de entrenamiento con datos de test
train = sample(1:nrow(Boston),300)
#Generar modelo
Boston.rf = randomForest(medv ~ .,data = Boston,subset = train)
Boston.rf
plot(Boston.rf)
oob.err = double(13)
test.err = integer(13)
test.err = factor(13)
test.err = double(13)
rf = randomForest(medv ~ ., data = Boston,subset = train,mtry=mtry,ntree = 450)
View(Boston.rf)
for (mtry in 1:13)
for (mtry in 1:13) {
rf = randomForest(medv ~ ., data = Boston,subset = train,mtry=mtry,ntree = 450)
oob.err[mtry] = rf$mse[450]
pred <- predict(rf,Boston[-train,])
test.err[mtry] <- with(Boston[-train,],mean((medv - pred)^2))
cat(mtry,"")
}
for (mtry in 1:13) {
rf = randomForest(medv ~ ., data = Boston,subset = train,mtry=mtry,ntree = 450)
oob.err[mtry] = rf$mse[450]
pred <- predict(rf,Boston[-train,])
test.err[mtry] <- with(Boston[-train,],mean((medv - pred)^2))
cat(mtry,"")
prin(mtry)
}
for (mtry in 1:13) {
rf = randomForest(medv ~ ., data = Boston,subset = train,mtry=mtry,ntree = 450)
oob.err[mtry] = rf$mse[450]
pred <- predict(rf,Boston[-train,])
test.err[mtry] <- with(Boston[-train,],mean((medv - pred)^2))
cat(mtry,"")
print("mtry")
}
for (mtry in 1:13) {
rf = randomForest(medv ~ ., data = Boston,subset = train,mtry=mtry,ntree = 450)
oob.err[mtry] = rf$mse[450]
pred <- predict(rf,Boston[-train,])
test.err[mtry] <- with(Boston[-train,],mean((medv - pred)^2))
cat(mtry,"")
print(mtry)
}
library(rpart)
x <- cbind(x_train,y_train)
library(dplyr)
install.packages("htmltab")
library(htmltab)
#Extrayendo información desde
url <- "http://www-old.subpesca.cl/transparencia/Otrascompras/2018/otras_compras.html"
compras_2018 <- htmltab(url,encoding = "UTF-8")
View(compras_2018)
set.seed(42)
types <- c("A", "B", "C", "D", "E", "F")
obs <- 4e+07
obs
one <- data.frame(id = as.factor(seq(from = 1, to = 80000, by = 1)), percent = round(runif(obs,
min = 0, max = 1), digits = 2), type = as.factor(sample(types, obs, replace = TRUE)))
sample(5,10)
sample(types,10)
sample(types,10,replace = TRUE)
sample(types,10,replace = FALSE)
sample(types,10,replace = TRUE)
sample(types,6)
sample(types,7)
sample(types,6)
sample(types,3)
sample(types,3,replace = TRUE)
sample(types,3,replace = TRUE)
sample(types,3,replace = TRUE)
print(object.size(one), units = "GB")
print(object.size(one), units = "GB")
head(one)
summary(duplicated(one$id))
View(one)
library(plyr)
typesubset <- c("A","B","E")
system.time(test1  <- ddply(one[one$type %in% typesubset,],.(id),summarise,percent_total = sum(percent)) )
View(test1)
library(dplyr)
View(test1)
system.time(test1  <- one %>% filter(type %in% typesubset) %>% group_by(id) %>% summarise(percent_total = sum(percent)))
View(test1)
library(data.table)
three <- data.table(one,key = c("id"))
View(three)
system.time(test4 <- three[, list(percent_total = sum(percent)), by = key(three)])
library(RSelenium)
library(dplyr)
#Configura las propiedades de firefox para que la descarga se haga automatica al momento de pinchar el boton de descarga. Adem?s, evite que se
#abra la ventana que te pregunta donde quieres guardar. Por defecto, las descargas ir?an desde la carpeta de "Descargas" De tu pc. Se puede modificar.
fprof <- makeFirefoxProfile(list(browser.download.folderList = 2L,
browser.download.manager.showWhenStarting     = FALSE,
browser.helperApps.neverAsk.openFile = "application/zip",
browser.download.useDownloadDir = TRUE,
browser.helperApps.neverAsk.saveToDisk =  "application/zip"))
# URL
url <- "https://numeros.pjud.cl/Descargas?fbclid=IwAR0jjyl3d88gkrk861o57ATEphxCux-o6Y4JRV3UxZhQfohMAjYRX3nV9QE"
# Conexion a Selenium. Seleccionas algun puerto cualquiera y seleccionas las configuraciones anteriormente señaladas.
rD <- rsDriver(port = 4449L, browser = "firefox", version = "latest", geckover = "latest", iedrver = NULL, phantomver = "2.1.1",
verbose = TRUE, check = TRUE, extraCapabilities = fprof) # works for selenium server: 3.3.1 and geckover: 0.15.0; Firefox: 52
install.packages("rgdal")
install.packages(c("dplyr", "httr", "rvest", "sf", "sp", "stringr", "xlsx"))
library(sf) # Read and handle kmz
install.packages("rgdal")
install.packages("lattice")
install.packages("rgdal")
install.packages("rgdal")
library(lattice)
library(sp)
install.packages("rgdal")
install.packages("sf")
install.packages("KernSmooth")
install.packages("sf")
#Carga de librerias
library(rvest) # Get data from web
library(httr)
install.packages("rgdal")
install.packages("sf")
library(readr)
#Fijar directorio de trabajo
setwd("/home/vcaquilpan/Documentos/R Scripts/SEA/v2/WebScraping-SEA/Datos")
#Carga de librerias
library(rvest) # Get data from web
library(httr)  # Also useful to get data on web
library(stringr) # Hand   le of strings
library(dplyr) # Handle data and use of pipelines
library(xlsx) # Read and write excel files
library(sf) # Read and handle kmz
library(lubridate) #handle with dates
Tabla_general <- read_csv("projects.csv")
View(Tabla_general)
#Arreglar columna qualification_date
vector_mes<- c('ene','feb','mar','abr','may','jun','jul','ago','sep','oct','nov','dic')
Tabla_general$qualification_date[!is.na(Tabla_general$qualification_date)] <- paste0(str_sub(Tabla_general$qualification_date[!is.na(Tabla_general$qualification_date)] ,start = 1,end = 2),"/",Tabla_general$qualification_date[!is.na(Tabla_general$qualification_date)] %>% str_extract(pattern = '[[:alpha:]]{3}+') %>% match(vector_mes),"/",str_sub(Tabla_general$qualification_date[!is.na(Tabla_general$qualification_date)] ,start = 8, end = 11))
Tabla_general$qualification_date <- as.Date(Tabla_general$qualification_date)
#Dejar entry date en el mismo formato
Tabla_general$entry_date <- as.Date(Tabla_general$entry_date)
View(Tabla_general)
#Imprimir Tabla resultante
write_csv(Tabla_general,"projects.csv",row.names = FALSE)
#Imprimir Tabla resultante
write.csv(Tabla_general,"projects.csv",row.names = FALSE)
#Imprimir Tabla resultante
write_csv(Tabla_general,"projects.csv")
